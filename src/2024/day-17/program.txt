part 2 decompiled program (manual)

while (A != 0) {
	B = A % 8
	B = B ^ 1
	C = A / (1 << B)
	B = B ^ 5
	A = A / (1 << 3)
	B = B ^ C
	out(B % 8)
}

simplified:

while (A != 0) {
	B = A % 8
	B = B ^ 1
	C = A >> B
	B = B ^ 5
	A = A >> 3
	B = B ^ C
	out(B % 8)
}

combine equations:

while (A != 0) {
	out((((A % 8) ^ 1) ^ 5) ^ (A >> ((A % 8) ^ 1)) % 8)
	A = A >> 3
}

A will be easier to work with in base 8 (octal) when reverse engineering digits.